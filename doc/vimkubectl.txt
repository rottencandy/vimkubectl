*vimkubectl.txt*	Manage Kubernetes resources from Vim

INTRODUCTION                                    *vimkubectl*

This plugin defines a set of commands and mappings for viewing, editing and
managing Kubernetes resources.

This plugin assumes that the user is logged in to the Kubernetes cluster using
`kubectl` or a similar command.

COMMANDS                                        *vimkubectl-commands*

:Kget {resource}                                *:Kget*
			Open a split that displays a list of all resources that
			match {resource}. If {resource} is not given, pod is
			used.

:Kedit {resource} {object}                      *:Kedit*
			Open a new split containing the manifest yaml of
			{object} of type {resource}. This is functionally
			similar to the `kubectl edit` command. (Also has
			`<Tab>` completion)

:Ksave {filename}                               *:Ksave*
			Save the currently open manifest locally to a file.
			If {filename} is not given, the resource name is used.
			(NOTE: This command is only available when viewing
			resource manifests)

:Kns {name}                                     *:Kns*
			Switch to using {name} as the current namespace.
			If {name} is not given, prints the currently selected
			namespace.
			(NOTE: This option only sets the namespace for
			|vimkubectl| commands,
			and does not set/modify `kubectl config`)

:Kctx {name}                                    *:Kctx*
			Switch to using {name} as the current context.
			If {name} is not given, prints the currently active context.

:{range}Kapply                                  *:Kapply*
			Apply file contents. When used with a
			selection({range}), applies the selected content, else
			applies the entire file.
			Can be used on any open buffer.

:Kdoc {resource}                                *:Kdoc*
			Open a split that displays the manual for any Custom 
			Resource Definition on the cluster. 

:K                                              *:K*
			Run any arbitrary `kubectl` command.

MAPPINGS                                        *vimkubectl-mapping*

These mappings can be used on the split buffers created by |:KGet| or the
manifest buffers when editing a resource.

ii                                              *vimkubectl_ii*
			Open the resource under the cursor for editing,
			defaults to YAML format.

is                                              *vimkubectl_is*
			Open the resource in a new split.

iv                                              *vimkubectl_iv*
			Open the resource in a new vertical split.

it                                              *vimkubectl_it*
			Open the resource in a new tab.

dd                                              *vimkubectl_id*
			Delete the resource under the cursor.
			(Prompts for confirmation)

gr                                              *vimkubectl_gr*
			When used in the manifest edit buffer,
			Update the currently editing manifest.
			(NOTE: This will disregard any local unsaved changes)

CONFIGURATION                                   *vimkubectl-configuration*

                                                *g:vimkubectl_command*
Vimkubectl uses the `kubectl` command for communicating with the cluster. Use
the `g:vimkubectl_command` variable to specify a different command.
For example, to use OpenShift's `oc` command:
>
    let g:vimkubectl_command = 'oc'
<
                                                *g:vimkubectl_timeout*
The `g:vimkubectl_timeout` variable can be used to specify the amount of time
(in seconds) to wait for responses, before considering the cluster won't
return. The default timeout limit is `5` seconds.
For example, to change the wait time to `10` seconds:
>
    let g:vimkubectl_timeout = 10
<

LICENSE                                         *vimkubectl-license*

MIT

------------------------------------------------------------------------------
vim: ft=help:tw=78:noet:norl:
